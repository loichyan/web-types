# $extend:
#   - shared.yaml

# HTML Elements
# https://developer.mozilla.org/en-US/docs/Web/HTML/Element
$default:
  link: mdn:Web/HTML/Element/%S
  default:
    link: mdn:Web/HTML/Element/%S#attr-%%s
    prop:
      link: mdn:Web/API/%T#%%s
  on:default:
    link: mdn:Web/API/%T#%%s

_ELEMENT_ATTR:
  $default:
    prop:
      link: mdn:Web/API/Element#element.%s
  id:
    type: <id>
    prop: id
  part:
    type: <string>
    prop: part
  slot:
    type: <string>
    prop: slot

_HTML_ELEMENT_ATTR:
  $default:
    prop:
      link: mdn:Web/API/HTMLElement#htmlelement.%s
  accesskey:
    type: <string>
    prop: accessKey
  autocapitalize:
    type: [none, characters, off, on, sentences, words]
    prop: autocapitalize
  autofocus:
    type: <boolean>
    prop: autofocus
  class:
    type: list<id>
    prop: className
  contenteditable:
    type: [false, true, inherit]
    prop: contentEditable
  dir:
    type: [auto, ltr, rtl]
    prop: dir
  draggable:
    type: [false, true]
    prop:
      name: draggable
      type: <boolean>
  enterkeyhint:
    type: [enter, done, go, next, previous, search, send]
    prop: enterKeyHint
  exportparts: <string>
  hidden:
    type: [hidden, until-found]
    prop:
      name: hidden
      type: [<false>, <true>, until-found]
  inert:
    type: <boolean>
    prop: inert
  inputmode:
    type: [none, decimal, email, numeric, search, tel, text, url]
    prop: inputMode
  is: <string>
  itemid: <string>
  itemprop: <string>
  itemref: <string>
  itemscope: <boolean>
  itemtype: <string>
  lang:
    type: <lang>
    prop: lang
  nonce:
    type: <string>
    prop: nonce
  spellcheck:
    type: [false, true]
    prop:
      name: spellcheck
      type: <boolean>
  style: <string>
  tabindex:
    type: <integer>
    prop: tabIndex
  title:
    type: <string>
    prop: title
  translate:
    type: [no, yes]
    prop:
      name: translate
      type: <boolean>

HTML_GLOBAL_ATTR:
  $link: mdn:Web/HTML/Global_attributes
  $default:
    link: mdn:Web/HTML/Global_attributes#%s
  $extend:
    - _ELEMENT_ATTR
    - _HTML_ELEMENT_ATTR
    # - ARIA_ATTR
    # - GLOBAL_EVENT

_HTML_MEDIA_ELEMENT_ATTR:
  $default:
    prop:
      link: mdn:Web/API/HTMLMediaElement#htmlmediaelement.%s
  autoplay:
    type: <boolean>
    prop: autoplay
  controls:
    type: <boolean>
    prop: controls
  controlslist:
    type: list<Controls>
    prop: controlsList
  crossorigin:
    type: <CrossOrigin>
    prop: crossOrigin
  loop:
    type: <boolean>
    prop: loop
  muted:
    type: <boolean>
    prop: muted
  preload:
    type: [none, metadata, auto]
    prop: preload
  src:
    type: <url>
    prop: src

_HTML_MOD_ELEMENT_ATTR:
  cite:
    type: <url>
    prop: cite
  datetime:
    type: <datetime>
    prop: dateTime

_HTML_QUOTE_ELEMENT_ATTR:
  cite:
    type: <url>
    prop: cite

_HTML_TABLE_CELL_ELEMENT_ATTR:
  colspan:
    type: <integer>
    prop: colSpan
  headers:
    type: list<string>
    prop: headers
  rowspan:
    type: <integer>
    prop: rowSpan

_TABLE_COL_ATTR_ATTR:
  span:
    type: <integer>
    prop: span

a:
  $type: HTMLAnchorElement
  download:
    type: <url>
    prop: download
  href:
    type: <url>
    prop: href
  hreflang:
    type: <lang>
    prop: hrefLang
  ping:
    type: list<url>
    prop: ping
  referrerpolicy:
    type: <ReferrerPolicy>
    prop: referrerPolicy
  rel:
    type: list<Rel>
    prop: rel
  target:
    type: <Target>
    prop: target
  type:
    type: <mime>
    prop: type

abbr: HTMLElement

address: HTMLElement

area:
  $type: HTMLAreaElement
  alt:
    type: <string>
    prop: alt
  coords:
    type: <string>
    prop: coords
  download:
    type: <url>
    prop: download
  href:
    type: <url>
    prop: href
  ping:
    type: list<url>
    prop: ping
  referrerpolicy:
    type: <ReferrerPolicy>
    prop: referrerPolicy
  rel:
    type: list<Rel>
    prop: rel
  shape:
    type: [rect, circle, poly, default]
    prop: shape
  target:
    type: <Target>
    prop: target

article: HTMLElement

aside: HTMLElement

audio:
  $type: HTMLAudioElement
  $extend:
    - _HTML_MEDIA_ELEMENT_ATTR

b: HTMLElement

base: HTMLBaseElement

bdi: HTMLElement

bdo: HTMLElement

blockquote:
  $type: HTMLQuoteElement
  $extend:
    - _HTML_QUOTE_ELEMENT_ATTR

body:
  $extend:
    - SHARED_WINDOW_EVENT
  $type: HTMLBodyElement

br: HTMLBRElement

button:
  $type: HTMLButtonElement
  autofocus:
    type: <boolean>
    prop: autofocus
  disabled:
    type: <boolean>
    prop: disabled
  form:
    type: <id>
    prop: form
  formaction:
    type: <url>
    prop: formAction
  formenctype:
    type: <FormEnctype>
    prop: formEnctype
  formmethod:
    # TODO: add `dialog` to MDN
    type: <FormMethod>
    prop: formMethod
  formnovalidate:
    type: <boolean>
    prop: formNoValidate
  formtarget:
    type: <Target>
    prop: formTarget
  name:
    type: <string>
  type:
    # TODO: remove `menu` from MDN
    type: [submit, reset, button]
    prop: type
  value:
    type: <string>
    prop: value

canvas:
  $type: HTMLCanvasElement
  on:webglcontextcreationerror: WebGLContextEvent
  on:webglcontextlost: WebGLContextEvent
  on:webglcontextrestored: WebGLContextEvent
  height:
    type: <integer>
    prop: height
  width:
    type: <integer>
    prop: width

caption: HTMLTableCaptionElement

cite: HTMLElement

code: HTMLElement

col:
  $type: HTMLTableColElement
  $extend:
    - _HTML_TABLE_COL_ELEMENT_ATTR

colgroup:
  $type: HTMLTableColElement
  $extend:
    - _HTML_TABLE_COL_ELEMENT_ATTR

data:
  $type: HTMLDataElement
  value:
    type: <string>
    prop: value

datalist: HTMLDataListElement

dd:
  $type: HTMLElement
  nowrap: [no, yes]

del:
  $type: HTMLModElement
  $extend:
    - _HTML_MOD_ELEMENT_ATTR

details:
  $type: HTMLDetailsElement
  open:
    type: <boolean>
    prop: open

dfn: HTMLElement

dialog:
  $type: HTMLDialogElement
  open:
    type: <boolean>
    prop: open

div:
  $type: HTMLDivElement
  align: [center, justify, left, right]

dl: HTMLDlistElement

dt: HTMLElement

em: HTMLElement

embed:
  $type: HTMLEmbedElement
  height:
    type: <integer>
    prop: height
  src:
    type: <url>
    prop: src
  type:
    type: <mime>
    prop: type
  width:
    type: <integer>
    prop: width

fieldset:
  $type: HTMLFieldSetElement
  disabled:
    type: <boolean>
    prop: disabled
  form: <id>
  name:
    type: <string>
    prop: name

figcaption: HTMLElement

figure: HTMLElement

footer: HTMLElement

form:
  $type: HTMLFormELement
  accept-charset:
    type: <string>
    prop: acceptCharset
  autocomplete:
    type: [off, on]
    prop: autocomplete
  name:
    type: <string>
    prop: name
  rel:
    type: list<Rel>
    prop: rel
  action:
    type: <url>
    prop: action
  enctype:
    type: <FormEnctype>
    prop: enctype
  method:
    type: <FormMethod>
    prop: method
  novalidate:
    type: <boolean>
    prop: noValidate
  target:
    type: <Target>
    prop: target

h1: HTMLHeadingElement
h2: HTMLHeadingElement
h3: HTMLHeadingElement
h4: HTMLHeadingElement
h5: HTMLHeadingElement
h6: HTMLHeadingElement

head:
  $type: HTMLHeadElement
  profile:
    type: <url>
    deprecated: true

header: HTMLElement

hgroup: HTMLElement

hr:
  $type: HTMLHRElement
  align:
    type: [bottom, left, right, top]
    deprecated: true
  color:
    type: <string>
    deprecated: true
  noshade:
    type: <boolean>
    deprecated: true
  size:
    type: <integer>
    deprecated: true
  width:
    type: <integer>
    deprecated: true

html: HTMLHtmlElement

i: HTMLElement

iframe:
  $type: HTMLIFrameElement
  allow:
    type: <string>
    prop: allow
  allowfullscreen:
    type: <boolean>
    prop: allowfullscreen
  height:
    type: <integer>
    prop: height
  loading:
    type: <Loading>
    prop: loading
  name:
    type: <string>
    prop: name
  referrerpolicy:
    type: <ReferrerPolicy>
    prop: referrerPolicy
  sandbox:
    type: <Sandbox>
    prop: sandbox
  src:
    type: <url>
    prop: src
  srcdoc:
    type: <url>
    prop: srcdoc
  width:
    type: <integer>
    prop: width

img:
  $type: HTMLImageElement
  alt:
    type: <string>
    prop: alt
  crossorigin:
    type: <CrossOrigin>
    prop: crossOrigin
  decoding:
    type: [auto, sync, async]
    prop: decoding
  elementtiming:
    type: <string>
    prop: elementTiming
  height:
    type: <integer>
    prop: height
  ismap:
    type: <boolean>
    prop: isMap
  loading:
    type: <Loading>
    prop: loading
  referrerpolicy:
    type: <ReferrerPolicy>
    prop: referrerPolicy
  sizes:
    type: <string>
    prop: sizes
  src:
    type: <url>
    prop: src
  srcset:
    type: <string>
    prop: srcset
  usemap:
    type: <url>
    prop: useMap
  width:
    type: <integer>
    prop: width

input:
  $type: HTMLInputElement
  accept:
    type: <string>
    prop: accept
  alt:
    type: <string>
    prop: alt
  autocomplete:
    type: <Autocomplete>
    prop: autocomplete
  capture:
    type: <string>
  checked:
    type: <boolean>
    prop: checked
  dirname:
    type: <string>
    prop: dirName
  disabled:
    type: <boolean>
    prop: disabled
  form: <id>
  formaction:
    type: <url>
    prop: formAction
  formenctype:
    type: <FormEnctype>
    prop: formEncType
  formmethod:
    type: <FormMethod>
    prop: formMethod
  formnovalidate:
    type: <boolean>
    prop: formNoValidate
  formtarget:
    type: <Target>
    form: formTarget
  height:
    type: <integer>
    prop: height
  list: <id>
  max:
    type: <string>
    prop: max
  maxlength:
    type: <integer>
    prop: maxLength
  min:
    type: <string>
    prop: min
  minlength:
    type: <integer>
    prop: minLength
  multiple:
    type: <boolean>
    prop: multiple
  name:
    type: <string>
    prop: name
  pattern:
    type: <string>
    prop: pattern
  placeholder:
    type: <string>
    prop: placeholder
  readonly:
    type: <boolean>
    prop: readOnly
  required:
    type: <boolean>
    prop: required
  size:
    type: <integer>
    prop: size
  src:
    type: <url>
    prop: src
  step:
    type: <string>
    prop: step
  type:
    type: <InputType>
    prop: type
  value:
    type: <string>
    prop: value
  width:
    type: <integer>
    prop: width

ins:
  $type: HTMLModElement
  $extend:
    - _HTML_MOD_ELEMENT_ATTR

kbd: HTMLElement

label:
  $type: HTMLLabelElement
  for:
    type: id
    prop: htmlFor

legend: HTMLLegendElement

li:
  $type: HTMLLIElement
  value:
    type: <integer>
    prop: value

link:
  $type: HTMLLinkElement
  as:
    type: <LinkAs>
    prop: as
  crossorigin:
    type: <CrossOrigin>
    prop: crossOrigin
  disabled:
    type: <boolean>
    prop: disabled
  href:
    type: <url>
    prop: href
  hreflang:
    type: <lang>
    prop: hrefLang
  imagesizes:
    type: <string>
    prop: imageSizes
  imagesrcset:
    type: <string>
    prop: imageSrcset
  integrity:
    type: <string>
    prop: integrity
  media:
    type: <string>
    prop: media
  referrerpolicy:
    type: <ReferrerPolicy>
    prop: referrerPolicy
  rel:
    type: <Rel>
    prop: rel
  type:
    type: <string>
    prop: title
  blocking: list<Blocking>

main: HTMLElement

map:
  $type: HTMLMapElement
  name: <string>

mark: HTMLElement

menu: HTMLMenuElement

meta:
  $type: HTMLMetaElement
  charset:
    type: <string>
    prop: charset
  content:
    type: <string>
    prop: content
  http-equiv:
    type: <HttpEquiv>
    prop: HttpEquiv
  name:
    type: <MetaName>
    prop: name

meter:
  $type: HTMLMeterElement
  high:
    type: <number>
    prop: high
  low:
    type: <number>
    prop: low
  max:
    type: <number>
    prop: max
  min:
    type: <number>
    prop: min
  optimum:
    type: <number>
    prop: optimum
  value:
    type: <number>
    prop: value

nav: HTMLElement

noscript: HTMLElement

object:
  $type: HTMLObjectElement
  data:
    type: <url>
    prop: data
  form:
    type: <id>
    prop: form
  height:
    type: <integer>
    prop: height
  name:
    type: <string>
    prop: name
  type:
    type: <mime>
    prop: type
  width:
    type: <integer>
    prop: width

ol:
  $type: HTMLOListElement
  reversed:
    type: <boolean>
    prop: reversed
  start:
    type: <integer>
    prop: start
  type:
    type: ["1", a, A, i, I]
    prop: type

optgroup:
  $type: HTMLOptGroupElement
  disabled:
    type: <boolean>
    prop: disabled
  label:
    type: <string>
    prop: label

option:
  $type: HTMLOptionElement
  disabled:
    type: <boolean>
    prop: disabled
  label:
    type: <string>
    prop: label
  selected:
    type: <boolean>
    prop: selected
  value:
    type: <string>
    prop: value

output:
  $type: HTMLOutputElement
  for:
    type: <id>
    prop: htmlFor
  form: <id>
  name:
    type: <string>
    prop: name

p: HTMLParagraphElement

picture: HTMLPictureElement

pre: HTMLPreElement

progress:
  $type: HTMLProgressElement
  max:
    type: <number>
    prop: max
  value:
    type: <number>
    prop: value

q:
  $type: HTMLQuoteElement
  $extend:
    - _HTML_QUOTE_ELEMENT_ATTR

rp: HTMLElement

rt: HTMLElement

ruby: HTMLElement

s: HTMLElement

samp: HTMLElement

script:
  $type: HTMLScriptElement
  async:
    type: <boolean>
    prop: async
  crossorigin:
    type: <CrossOrigin>
    prop: crossOrigin
  defer:
    type: <boolean>
    prop: defer
  integrity:
    type: <string>
    prop: integrity
  nomodule:
    type: <boolean>
    prop: noModule
  referrerpolicy:
    type: <ReferrerPolicy>
    prop: referrerPolicy
  src:
    type: <url>
    prop: src
  type:
    type: [module, importmap]
    prop: type
  blocking: list<Blocking>

section: HTMLElement

select:
  $type: HTMLSelectElement
  autocomplete:
    type: <Autocomplete>
    prop: autocomplete
  disabled:
    type: <boolean>
    prop: disabled
  form: <id>
  multiple:
    type: <boolean>
    prop: multiple
  name:
    type: <string>
    prop: name
  required:
    type: <boolean>
    prop: required
  size:
    type: <integer>
    prop: size

slot:
  $type: HTMLSlotElement
  name:
    type: <string>
    prop: name

small: HTMLElement

source:
  $type: HTMLSourceElement
  height:
    type: <integer>
    prop: height
  meida:
    type: <string>
    prop: media
  src:
    type: <url>
    prop: src
  srcset:
    type: <string>
    prop: srcset
  sizes:
    type: <string>
    prop: sizes
  type:
    type: <mime>
    prop: type
  width:
    type: <integer>
    prop: width

span: HTMLSpanElement

strong: HTMLElement

style:
  $type: HTMLStyleElement
  media:
    type: <string>
    prop: media
  blocking: list<Blocking>

sub: HTMLElement

summary: HTMLElement

sup: HTMLElement

table: HTMLTableElement

tbody: HTMLTableSectionElement

td:
  $type: HTMLTableCellElement
  $extend:
    - _HTML_TABLE_CELL_ELEMENT_ATTR

template: HTMLTemplateElement

textarea:
  $type: HTMLTextAreaElement
  autocomplete:
    type: <Autocomplete>
    prop: autocomplete
  cols:
    type: <integer>
    prop: cols
  dirname:
    type: <string>
    prop: dirName
  disabled:
    type: <boolean>
    prop: disabled
  form: <id>
  maxlength:
    type: <integer>
    prop: maxLength
  minlength:
    type: <integer>
    prop: minLength
  name:
    type: <string>
    prop: name
  placeholder:
    type: <string>
    prop: placeholder
  readonly:
    type: <boolean>
    prop: readOnly
  required:
    type: <boolean>
    prop: required
  rows:
    type: <integer>
    prop: rows
  wrap:
    type: [off, hard, soft]
    prop: wrap

tfoot: HTMLTableSectionElement

th:
  $type: HTMLTableCellElement
  $extend:
    - _HTML_TABLE_CELL_ELEMENT_ATTR
  abbr:
    type: <string>
    prop: abbr
  scope:
    type: [row, col, rowgroup, colgroup]
    prop: scope

thead: HTMLTableSectionElement

time:
  $type: HTMLTimeElement
  datetime:
    type: <datetime>
    prop: dateTime

title: HTMLTitleElement

tr: HTMLTableRowElement

track:
  $type: HTMLTrackElement
  default:
    type: <boolean>
    prop: default
  kind:
    type: [subtitles, captions, descriptions, chapters, metadata]
    prop: kind
  label:
    type: <string>
    prop: label
  src:
    type: <url>
    prop: src
  srclang:
    type: <lang>
    prop: srclang

u: HTMLElement

ul: HTMLUListElement

var: HTMLElement

video:
  $type: HTMLVideoElement
  $extend:
    - _HTML_MEDIA_ELEMENT_ATTR
  on:enterpictureinpicture: PictureInPictureEvent
  on:leavepictureinpicture: PictureInPictureEvent
  height:
    type: <integer>
    prop: height
  playsinline:
    type: <boolean>
    prop: playsInline
  poster:
    type: <url>
    prop: poster
  width:
    type: <integer>
    prop: width

wbr: HTMLElement
